// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char SSID[]     = SECRET_SSID;    // Network SSID (name)
const char PASS[]     = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)

void onModule1LightValChange();
void onManualLightOnChange();
void onAfternoonLightThresholdChange();
void onBrightnessLevelChange();
void onDayLightThresholdChange();
void onNightLightThresholdChange();
void onSchedulerChange();
void onEnableAutomaticChange();
void onLightPWRChange();
void onLightStatusChange();
void onModule2MotionValChange();
void onMotionPWRChange();

float module_1_Light_Val;
CloudDimmedLight manual_Light_On;
int afternoon_Light_Threshold;
int brightness_Level;
int day_Light_Threshold;
int night_Light_Threshold;
CloudSchedule scheduler;
bool enable_automatic;
bool hub_PWR;
bool Light_PWR;
bool light_Status;
bool module_2_Motion_Val;
bool motion_PWR;

void initProperties(){

  ArduinoCloud.addProperty(module_1_Light_Val, READWRITE, ON_CHANGE, onModule1LightValChange);
  ArduinoCloud.addProperty(manual_Light_On, READWRITE, ON_CHANGE, onManualLightOnChange);
  ArduinoCloud.addProperty(afternoon_Light_Threshold, READWRITE, ON_CHANGE, onAfternoonLightThresholdChange);
  ArduinoCloud.addProperty(brightness_Level, READWRITE, ON_CHANGE, onBrightnessLevelChange);
  ArduinoCloud.addProperty(day_Light_Threshold, READWRITE, ON_CHANGE, onDayLightThresholdChange);
  ArduinoCloud.addProperty(night_Light_Threshold, READWRITE, ON_CHANGE, onNightLightThresholdChange);
  ArduinoCloud.addProperty(scheduler, READWRITE, ON_CHANGE, onSchedulerChange);
  ArduinoCloud.addProperty(enable_automatic, READWRITE, ON_CHANGE, onEnableAutomaticChange);
  ArduinoCloud.addProperty(hub_PWR, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(Light_PWR, READWRITE, ON_CHANGE, onLightPWRChange);
  ArduinoCloud.addProperty(light_Status, READWRITE, ON_CHANGE, onLightStatusChange);
  ArduinoCloud.addProperty(module_2_Motion_Val, READWRITE, ON_CHANGE, onModule2MotionValChange);
  ArduinoCloud.addProperty(motion_PWR, READWRITE, ON_CHANGE, onMotionPWRChange);



}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
